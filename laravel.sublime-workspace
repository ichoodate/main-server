{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Error",
				"depInvalidError"
			],
			[
				"exp",
				"expect"
			],
			[
				"loadA",
				"loadAvailableRuleListWith"
			],
			[
				"bind",
				"bindKey"
			],
			[
				"cARD",
				"cardGroup"
			],
			[
				"require",
				"required_coin"
			],
			[
				"resol",
				"resolved"
			],
			[
				"card_gr",
				"card_group_id"
			],
			[
				"ar",
				"argsDic"
			],
			[
				"uniq",
				"uniqueString"
			],
			[
				"Da",
				"DateTimeZone"
			],
			[
				"aft",
				"afterTimezone"
			],
			[
				"befo",
				"beforeTime"
			],
			[
				"NOW",
				"nowTimezoneDateToUtc"
			],
			[
				"cardG",
				"cardGroupQuery2"
			],
			[
				"cardGr",
				"cardGroupBaseQuery"
			],
			[
				"card",
				"cardQuery2"
			],
			[
				"uni",
				"unionAll"
			],
			[
				"ver",
				"verifyLoader"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"call_use",
				"call_user_func"
			],
			[
				"verf",
				"verifyArrLoader"
			],
			[
				"ava",
				"availableOrderByFields"
			],
			[
				"resolved",
				"resolvedNames"
			],
			[
				"array_key",
				"array_key_exists"
			],
			[
				"o",
				"orderBy"
			],
			[
				"resolveA",
				"resolveArrLoader"
			],
			[
				"reoslveA",
				"resolveArrBindName"
			],
			[
				"exc",
				"expect"
			],
			[
				"expec",
				"expectClosure"
			],
			[
				"now_",
				"now_timezone_date"
			],
			[
				"authuse",
				"authUserQuery"
			],
			[
				"match",
				"matchingUserQuery"
			],
			[
				"INST",
				"inst"
			],
			[
				"testG",
				"testGetArrLoaderModel"
			],
			[
				"now",
				"nowTimezoneDate"
			],
			[
				"TIME",
				"timezone"
			],
			[
				"eval",
				"evaluatedTime"
			],
			[
				"lim",
				"limited_max_count"
			],
			[
				"isF",
				"isFreeCount"
			],
			[
				"veri",
				"verifyArrRuleLists"
			],
			[
				"li",
				"limitedMinTime"
			],
			[
				"AUTH",
				"auth_user"
			],
			[
				"Tick",
				"TicketFindingService"
			],
			[
				"matchUser",
				"matchingUsers"
			],
			[
				"aval",
				"available_fields"
			],
			[
				"Card",
				"CardGroup"
			],
			[
				"functio",
				"function"
			],
			[
				"activi",
				"ACTIVITY_ID"
			],
			[
				"Mat",
				"Match"
			],
			[
				"type_",
				"TYPE_CARD_FLIP"
			],
			[
				"matcing",
				"matchingUserStatus"
			],
			[
				"authUs",
				"authUserStatus"
			],
			[
				"suQ",
				"subQuery1"
			],
			[
				"nameK",
				"nameKeys"
			],
			[
				"Ser",
				"Service"
			],
			[
				"function",
				"function_exists"
			],
			[
				"getArr",
				"getArrCallbackLists"
			],
			[
				"Act",
				"ActivityListReadService"
			],
			[
				"Injec",
				"Injectable\talias"
			],
			[
				"pr",
				"profile\tdirectory"
			],
			[
				"for",
				"for\tfor (…) {…} (Improved Native For-Loop)"
			],
			[
				"im",
				"imports\tproperty"
			],
			[
				"align",
				"align-content\tproperty"
			],
			[
				"par",
				"partInfo\tconst"
			],
			[
				"co",
				"container.module\tscript"
			],
			[
				"Ren",
				"Renderer2\talias"
			],
			[
				"pro",
				"providers\tproperty"
			],
			[
				"edi",
				"edited\tproperty"
			],
			[
				"tran",
				"transparent\tbackground"
			],
			[
				"ab",
				"absolute\tposition"
			],
			[
				"mo",
				"dropdown-select.module\tscript"
			],
			[
				"mode",
				"moduleFactory\tparameter"
			],
			[
				"modul",
				"moduleFactory\tparameter"
			],
			[
				"module",
				"modulePath\tlet"
			],
			[
				"import",
				"imports\tproperty"
			],
			[
				"imp",
				"import\timports a module …"
			],
			[
				"func",
				"function\tkeyword"
			],
			[
				"Comp",
				"ComponentFactoryResolver\talias"
			],
			[
				"fo",
				"for\tfor (…) {…} (Improved Native For-Loop)"
			],
			[
				"Mai",
				"MainHeaderComponent\talias"
			],
			[
				"cli",
				"client-e2e"
			],
			[
				"usde",
				"usedCoin"
			],
			[
				"TYPE_CREATE",
				"TYPE_CREATE_CARD_GROUP_DAILY"
			],
			[
				"TYPE_CREATE_",
				"TYPE_CREATE_CARD_GROUP"
			],
			[
				"withd",
				"withdrawCoin"
			],
			[
				"local_d",
				"local_date_to_utc_time"
			],
			[
				"localDate",
				"localDateToUtc"
			],
			[
				"before",
				"before_datetime"
			],
			[
				"free",
				"freeMinCount"
			],
			[
				"free_m",
				"free_min_count"
			],
			[
				"TYPE_",
				"TYPE_CARD_FLIP"
			],
			[
				"free_",
				"free_min_count"
			],
			[
				"eva",
				"evaluated_count"
			],
			[
				"TYPE_CARD_",
				"TYPE_CARD_FLIP"
			],
			[
				"exi",
				"exists"
			],
			[
				"array_p",
				"array_pop"
			],
			[
				"phot",
				"photableClass"
			],
			[
				"path",
				"pathBuilder"
			],
			[
				"Match",
				"MatchReadService"
			],
			[
				"ch",
				"chattingContent"
			],
			[
				"chattignC",
				"chatting_content"
			],
			[
				"SE",
				"serv"
			],
			[
				"verify",
				"verifyArrBindNames"
			],
			[
				"matchingUser",
				"matchingUserIdField"
			],
			[
				"func_ge",
				"func_get_args"
			],
			[
				"CO",
				"CollectionMocker"
			],
			[
				"keyword",
				"keywordIds"
			],
			[
				"Col",
				"CollectionMocker"
			],
			[
				"per",
				"permitted_auth_user"
			],
			[
				"Car",
				"CardGroup"
			],
			[
				"DateT",
				"DateTimeChangeService"
			],
			[
				"subQu",
				"subQuery1"
			],
			[
				"sub",
				"subQuery2"
			],
			[
				"Model",
				"ModelMocker"
			],
			[
				"MATCHING",
				"MATCHING_USER_ID"
			],
			[
				"MATCHI",
				"MATCHING_USER_ID"
			],
			[
				"ac",
				"activity"
			],
			[
				"sERV",
				"Serv"
			],
			[
				"aU",
				"AUTH_USER"
			],
			[
				"act",
				"activityQuery"
			],
			[
				"AC",
				"Activity"
			],
			[
				"qWhere",
				"qWhere"
			],
			[
				"_user_stat",
				"_USER_STATUS_CARD_PROPOSE"
			],
			[
				"_USER",
				"_USER_STATUS_CARD_PROPOSE"
			],
			[
				"_USER_ST",
				"_USER_STATUS_CARD_OPEN"
			],
			[
				"_user_st",
				"_USER_STATUS_CARD_PROPOSE"
			],
			[
				"USER",
				"userStatus"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tests/Unit/app/Services/Activity/ActivityFindingServiceTest.php",
			"settings":
			{
				"buffer_size": 2215,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\nnamespace Tests\\Unit;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Mockery;\nuse Tests\\_InstanceMocker as InstanceMocker;\nuse Tests\\Unit\\_Stub;\nuse Tests\\_TestCase as TestCase;\n\nclass _TestCase extends TestCase {\n\n    use DatabaseMigrations;\n\n    public static function class()\n    {\n        $parts = explode('\\\\', static::class);\n\n        array_shift($parts);\n        array_shift($parts);\n\n        $parts[count($parts) - 1] = preg_replace('/Test$/', '', end($parts));\n\n        return implode('\\\\', $parts);\n    }\n\n    public static function mMock(...$args)\n    {\n        return Mockery::mock(...$args);\n    }\n\n    public function proxy($instance)\n    {\n        return inst(_Stub::class, [$instance]);\n    }\n\n    protected function refreshApplication()\n    {\n        putenv('APP_ENV=unit-testing');\n\n        $this->app = $this->createApplication();\n    }\n\n    public function setUp()\n    {\n        parent::setUp();\n\n        $this->class = $this->class();\n\n        app('db')->statement()\n    }\n\n    public static function setUpBeforeClass()\n    {\n        parent::setUpBeforeClass();\n\n        $segments = explode('\\\\', static::class());\n\n        if ( ! starts_with(array_pop($segments), '_') )\n        {\n            static::assertTrue(class_exists(static::class()), static::class() . ' class does not exists');\n        }\n    }\n\n    public function tearDown()\n    {\n        InstanceMocker::empty();\n\n        Mockery::close();\n\n        parent::tearDown();\n    }\n\n    public function when()\n    {\n        $serv  = inst($this->class());\n        $proxy = $this->proxy($serv);\n        $args  = func_get_args();\n        $func  = array_shift($args);\n\n        call_user_func_array($func, array_merge([$proxy, $serv], $args));\n    }\n\n}\n",
			"file": "tests/Unit/_TestCase.php",
			"file_size": 1857,
			"file_write_time": 131921161030728932,
			"settings":
			{
				"buffer_size": 1744,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"control",
				"Package Control: Disable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"PACKA",
				"Package Control: Install Package"
			],
			[
				"TABLE",
				"AlignTab: Table Mode"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"a",
				"AlignTab: Live Preview Mode"
			],
			[
				"",
				"AlignTab"
			],
			[
				"A",
				"AlignTab"
			],
			[
				"Al",
				"AlignTab"
			],
			[
				"al",
				"AlignTab: Live Preview Mode"
			],
			[
				"table",
				"AlignTab: Live Preview Mode"
			],
			[
				"aligntab",
				"AlignTab: Table Mode"
			],
			[
				"tabm",
				"AlignTab: Table Mode"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 425.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"view.run_command(\"test\")",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"import sys",
			"print(sys.path)",
			"import sys",
			"print(sys.path)",
			"print (sys.path)",
			"print(sys.path)",
			"print(sys.version)",
			"where python",
			"os.path.dirname(sys.executable)",
			"import sys",
			"import os",
			"view.run_command(\"test\")",
			"view.run_command(\"undo\")",
			"view.run_command(\"test\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"hello2\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"hello2\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"example\")",
			"import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"  import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/server",
		"/C/xampp/htdocs/server/database",
		"/C/xampp/htdocs/server/database/factories",
		"/C/xampp/htdocs/server/database/migrations",
		"/C/xampp/htdocs/server/routes",
		"/C/xampp/htdocs/server/tests",
		"/C/xampp/htdocs/server/tests/Feature",
		"/C/xampp/htdocs/server/tests/Feature/app",
		"/C/xampp/htdocs/server/tests/Unit",
		"/C/xampp/htdocs/server/tests/Unit/app",
		"/C/xampp/htdocs/server/tests/Unit/app/Services",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Activity",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Card",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/CardGroup",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/ChattingContent",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Coin",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/IdealTypable",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Item",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Match",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Notice",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Notification",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Obj",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/ProfilePhoto",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Reply",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/RequiredCoin"
	],
	"file_history":
	[
		"/C/xampp/htdocs/server/tests/Unit/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Activity/ActivityFindingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/ExampleTest.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_23_000001_create_activities_table.php",
		"/C/xampp/htdocs/server/database/database.sqlite",
		"/C/xampp/htdocs/server/database/migrations/2014_10_29_000002_create_notices_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_11_11_000000_create_sessions_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_16_000001_create_cards_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_16_000005_create_chatting_contents_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_17_000001_create_coins_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_20_000001_create_face_photos_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_20_000001_create_payments_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_20_000001_create_popularities_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_20_000001_create_profile_photos_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_16_000000_create_card_groups_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_15_000004_create_matches_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_15_000003_create_localizables_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_24_000001_create_notifications_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_25_000001_create_tickets_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_26_000001_create_replies_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_29_000001_create_ideal_typables_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_29_000001_create_profilables_table.php",
		"/C/xampp/htdocs/server/.env.integrate-testing",
		"/C/xampp/htdocs/server/database/migrations/2014_10_15_000000_create_users_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_11_12_100000_create_password_resets_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_13_000000_create_user_infos_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_13_000000_create_roles_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_10_000000_create_objs_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_11_000000_create_sessions_table.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_12_100000_create_password_resets_table.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Activity/CardActivityListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Card/CardPagingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Activity/CardActivityCreatingServiceTest.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_20_000001_create_phone_messages_table.php",
		"/C/xampp/htdocs/server/database/factories/model/ActivityFactory.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_12_000000_create_users_table.php",
		"/C/xampp/htdocs/server/database/factories/model/UserFactory.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/IdealTypable/IdealTypableMergingServiceTest.php",
		"/C/xampp/htdocs/server/app/Service.php",
		"/C/xampp/htdocs/server/tests/Feature/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/ServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/_TestCase.php",
		"/C/xampp/htdocs/server/app/Services/Activity/ActivityFindingService.php",
		"/C/xampp/htdocs/server/app/Services/Activity/CardActivityListingService.php",
		"/C/xampp/htdocs/server/app/Services/Activity/MatchActivityListingService.php",
		"/C/xampp/htdocs/server/app/Services/AdminUserRequiringService.php",
		"/C/xampp/htdocs/server/app/Services/AuthUserRequiringService.php",
		"/C/xampp/htdocs/server/app/Services/Card/CardFindingService.php",
		"/C/xampp/htdocs/server/app/Services/Card/CardGroupCardListingService.php",
		"/C/xampp/htdocs/server/app/Services/Card/CardPagingService.php",
		"/C/xampp/htdocs/server/app/Services/CardGroup/CardGroupCreatingService.php",
		"/C/xampp/htdocs/server/app/Services/CardGroup/DailyCardGroupCreatingService.php",
		"/C/xampp/htdocs/server/app/Services/ChattingContent/ChattingContentCreatingService.php",
		"/C/xampp/htdocs/server/app/Services/ChattingContent/ChattingContentFindingService.php",
		"/C/xampp/htdocs/server/app/Services/ChattingContent/MatchChattingContentPagingService.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Activity/MatchActivityListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Activity/MatchActivityListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Activity/CardActivityCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Activity/ActivityFindingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/RequiredCoin/CardActivityRequiredCoinCountingServiceTest.php",
		"/C/xampp/htdocs/server/app/Database/Collection.php",
		"/C/xampp/htdocs/server/app/Services/RequiredCoin/CardActivityRequiredCoinCountingService.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/RequiredCoin/CardActivityRequiredCoinCountingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/ChattingContent/MatchChattingContentPagingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Activity/CardActivityListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Card/CardGroupCardListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Card/CardFindingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Coin/UsedCoinCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/CardGroup/CardGroupCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/CardGroup/DailyCardGroupCreatingServiceTest.php",
		"/C/xampp/htdocs/server/app/Database/Models/Match.php",
		"/C/xampp/htdocs/server/app/Services/Activity/CardActivityCreatingService.php",
		"/C/xampp/htdocs/server/app/Database/Models/Activity.php",
		"/C/xampp/htdocs/server/app/Database/Models/Keyword/Hobby.php",
		"/C/xampp/htdocs/server/tests/_InstanceMocker.php",
		"/C/xampp/htdocs/server/app/Services/RequiredCoinExistingService.php",
		"/C/xampp/htdocs/server/app/Services/RequiredCoin/RequiredCoinCountingService.php",
		"/C/xampp/htdocs/server/app/Services/NowTimezoneService.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/FindingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/ListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Coin/AddedCoinCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/FacePhoto/FacePhotoUpdatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/NowTimezoneServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Obj/KeywordObjListingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Database/Models/_Mocker.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Database/Models/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Database/Queries/_TestCase.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Card/CardPagingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/ProfilePhoto/ProfilePhotoCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/Ticket/TicketCreatingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/User/MatchingUserRandommingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Unit/app/Services/User/UserCreatingServiceTest.php",
		"/C/xampp/htdocs/server/app/Services/DateTimeChangingService.php",
		"/C/xampp/htdocs/server/tests/Unit/_InstanceMocker.php",
		"/C/xampp/htdocs/server/app/Services/Coin/AddedCoinCreatingService.php",
		"/C/xampp/htdocs/server/app/Services/Reply/ReplyFindingService.php",
		"/C/xampp/htdocs/server/app/Services/Obj/KeywordObjListingService.php",
		"/C/xampp/htdocs/server/app/Services/Coin/UsedCoinCreatingService.php",
		"/C/xampp/htdocs/server/app/Database/Models/Coin.php",
		"/C/xampp/htdocs/server/database/migrations/2014_10_18_000001_create_added_coins_table.php",
		"/C/xampp/htdocs/server/resources/lang/en/validation.php",
		"/C/xampp/htdocs/server/app/Validation/Validator.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/Card/CardFindingServiceTest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/abc.php",
		"/C/xampp/htdocs/server/tests/Feature/app/AAATest.php",
		"/C/xampp/htdocs/server/tests/Feature/app/Services/AAATest.php",
		"/C/xampp/htdocs/server/tests/Feature/ExampleTest.php",
		"/C/xampp/htdocs/server/app/Services/ListingService.php",
		"/C/xampp/htdocs/server/database/factories/model/CardFactory.php",
		"/C/xampp/htdocs/server/database/factories/model/ModelFactory.php",
		"/C/xampp/htdocs/server/tests/Feature/Service/Card/CardPagingServiceTest.php",
		"/C/xampp/htdocs/server/app/Database/Model.php",
		"/C/xampp/htdocs/server/app/Database/Models/Localizable.php",
		"/C/xampp/htdocs/server/app/Database/Models/Item.php",
		"/C/xampp/htdocs/server/app/Database/Models/Notice.php",
		"/C/xampp/htdocs/server/app/Database/Models/Notification.php",
		"/C/xampp/htdocs/server/app/Database/Models/Obj.php",
		"/C/xampp/htdocs/server/app/Database/Models/Payment.php",
		"/C/xampp/htdocs/server/app/Database/Models/Popularity.php",
		"/C/xampp/htdocs/server/app/Database/Models/Ticket.php",
		"/C/xampp/htdocs/server/app/Database/Models/ChattingContent.php",
		"/C/xampp/htdocs/server/app/Database/Models/CardGroup.php",
		"/C/xampp/htdocs/server/app/Database/Models/Card.php",
		"/C/xampp/htdocs/server/database/factories/model/CardGroupFactory.php",
		"/C/xampp/htdocs/server/app/Database/Models/User.php",
		"/C/xampp/htdocs/server/app/Database/Models/Role.php"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 113.0,
		"where_history":
		[
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"C:\\xampp\\htdocs\\server\\app\\Database\\Models\\Keyword",
			"C:\\xampp\\htdocs\\server\\app\\Database\\Models",
			"C:\\xampp\\htdocs\\server\\app\\Http\\Controllers\\Api\\",
			"C:\\xampp\\htdocs\\server\\app\\Http\\Controllers\\Api\\Keyword",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"C:\\xampp\\htdocs\\server\\database\\factories\\model\\Keyword",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"C:\\xampp\\htdocs\\server\\app\\Services",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"C:\\xampp\\htdocs\\server\\app\\Services",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services\\*, ,-C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services\\_TestCase.php",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services, ,-C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services\\_TestCase.php",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services, -C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services\\_TestCase.php",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\app\\Services",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\",
			"C:\\xampp\\htdocs\\server\\tests\\unit\\Services",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"-*/vendor/*",
			"",
			"C:\\xampp\\htdocs\\server\\database, C:\\xampp\\htdocs\\server\\tests, C:\\xampp\\htdocs\\server\\app",
			"",
			"C:\\xampp\\htdocs\\server\\tests",
			"C:\\xampp\\htdocs\\laravel_dev_master\\tests",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"primary",
			"\n            ",
			"unique",
			"foreign_keys",
			"refreshApplication",
			"refreshApplication(",
			"refreshApplication",
			"lockFor",
			"$serv->",
			"query",
			"    public static function getArrCallbackLists()",
			"resolve(",
			"getAvailableRuleListWith(",
			"getAvailableDataWith(",
			"hasInvalidLoaderDependency(",
			"assertRecordExist",
			"assertRecordExist(",
			"modelClass(",
			"assertRecordExist(",
			"runService(",
			"assertData(",
			"prote",
			"protected",
			"private static",
			"public",
			"Invalid",
			"depInvalidError",
			"depNotExistException",
			"new ",
			"notResolved(",
			" notResolved(",
			"notResolved(",
			"n get",
			"depInvalidError",
			"runService(",
			"runService",
			"/\\{\\{([a-z0-9\\_\\.\\*]+)\\}\\}",
			"getAvailableRuleListWith",
			"getAvailableDataWith(",
			"resolve(",
			"hasInvalidLoaderDependency(",
			"getValidationError(",
			"getAvailableDataWith(",
			"hasInvalidLoaderDependency(",
			"hasInvalidLoaderDependency",
			"hasInvalidLoaderDependency(",
			"hasInvalidLoaderDependency",
			"LoaderD",
			"Invalid",
			"hasInvalidLoaderDependency(",
			"hasInvalidLoaderDependency",
			"hasInvalidLoaderDependency(",
			"hasInvalidLoaderDependency",
			"getDependencies(",
			"$this->validate(",
			"n resolve",
			"resolveCallbackListKey",
			"hasInvalidLoaderDependency(",
			"hasInvalidLoaderDependency",
			"hasInvalidLoaderDependency(",
			"hasInvalidDependency(",
			"array_slice",
			"hasInvalidDependency(",
			"getDependencies(",
			"$loader",
			", []",
			"getAvailableDataWith(",
			"hasInvalidDependency(",
			"getAvailableDataWith(",
			"hasInvalidDependency(",
			"getAvailableDataWith(",
			"getValidationError(",
			"getValidationError",
			"getValidationError(",
			"getAvailableDataWith(",
			"$resolved",
			"isResolved(",
			"isNotResolved(",
			"resolveError",
			"isResolveError",
			"getAvailableDataWith(",
			"hasInvalidDependency(",
			"getValidationError(",
			"getAvailableDataWith(",
			"run(",
			"processed",
			"$processed",
			"   =",
			"isResolveError(",
			"resolveError",
			"resolve(",
			"getAvailableDataWith(",
			"hasInvalidDependency(",
			"getAvailableDataWith(",
			"getValidationError",
			"getAvailableRuleListWith(",
			"resolve(",
			"validates",
			"resolve(",
			"isResolveError(",
			"data",
			"initService(",
			"newChild",
			"getAvailableRuleListWith",
			"ruleList",
			"validationError(",
			"$error",
			"validationError(",
			"rules",
			"validationError(",
			"$ruleList",
			"$value",
			"promiseList",
			"getDependencies",
			"callbackList",
			"$ruleList",
			"getAvailableRuleListWith",
			"getAvailableRuleListWith(",
			"validationError(",
			"getAvailableRuleListWith(",
			"loadAvailableRuleListWith",
			"loadAvailableDataWith(",
			"loadAvailableRulesWith",
			"ruleList",
			"loadAvailableRulesWith(",
			"loadAvailableRulesWith",
			"loadAvailableRuleListWith",
			"resolveCallbackListKey"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"class, ",
			"Tests\\_InstanceMocker",
			"now_utc_datetime",
			"->assertResult(",
			"'objs'",
			"    ];\n\n}",
			"{\n\n    const ",
			"    }\n\n}\n",
			"    }\n\n    public function ",
			"    ];\n\n    public function ",
			" {\n\n    protected",
			"\nclass ",
			"<?php\n\nnamespace App\\Database\\Models;\n",
			"\n",
			"namespace App\\Database\\Models;\n\n\nuse App\\Database\\Model;\n",
			"namespace App\\Http\\Controllers\\Api",
			"namespace App\\Http\\Controllers\\Keyword;",
			"Stature",
			"State",
			"Smoke",
			"Residence",
			"Religion",
			"Nationality",
			"Language",
			"Hobby",
			"EduBg",
			"Drink",
			"Country",
			"Character",
			"Career",
			"Body",
			"Blood",
			"AgeRange",
			"Body",
			"Blood",
			"AgeRange",
			"class ",
			"namespace Database\\Factories\\Model\\Keyword;",
			"App\\Database\\Models\\Keyword\\",
			"<?php\n\nnamespace ",
			"app('resolver/exception')",
			"getArrTraits",
			"RANGE",
			"resolveLoader",
			"verifyCallback(",
			"verifyLoader(",
			"App\\Service",
			"public function testCallback",
			"public function testLoader",
			"    public function testArrRuleLists()",
			"function testArrBindNames(",
			"        $this->when(function ($proxy, $serv) {",
			"            $proxy->data",
			"MatchingUserRandommingService",
			"MatchingUserListing",
			"Listing",
			"Service",
			"AuthUserRequiringService",
			"PermittedUser",
			"permitted_user",
			"AdminUserRequiringService",
			"RequiredCoinExistingService",
			"AuthUserRequiringServiceTrait",
			"PermittedAuthUserRequiringService",
			"Paging",
			"DateTimeChangingService",
			"CheckingService",
			"FindingSer",
			"CreatingService",
			"Relating",
			"FindingService",
			"PagingService",
			"TICKET_ID",
			"Reply",
			"NOTICE",
			"TICKET",
			"reply",
			"replies",
			"ticket",
			"Ticket",
			"Notice",
			"RequiredServiceTrait",
			"Obj",
			"AdminAuthUserRequiredServiceTrait",
			"mMock(",
			"mmock(",
			" app()",
			" inst(",
			"InstanceMocker::add(",
			"InstanceMocker::register("
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tests/Unit/app/Services/Activity/ActivityFindingServiceTest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2215,
						"regions":
						{
						},
						"selection":
						[
							[
								1933,
								1933
							]
						],
						"settings":
						{
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1035.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/Unit/_TestCase.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1744,
						"regions":
						{
						},
						"selection":
						[
							[
								1005,
								1005
							]
						],
						"settings":
						{
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 713.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 398.0
	},
	"pinned_build_system": "Packages/User/python36.sublime-build",
	"project": "laravel.sublime-project",
	"replace":
	{
		"height": 76.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"activityfindingser",
				"tests\\Unit\\app\\Services\\Activity\\ActivityFindingServiceTest.php"
			],
			[
				"_TestCase",
				"tests\\Unit\\_TestCase.php"
			],
			[
				"dat",
				"database\\database.sqlite"
			],
			[
				"_tes",
				"tests\\Unit\\_TestCase.php"
			],
			[
				"activities_",
				"database\\migrations\\2014_10_23_000001_create_activities_table.php"
			],
			[
				"Tests\\Unit\\_te",
				"tests\\Unit\\_TestCase.php"
			],
			[
				"Tests\\Unit\\App\\Services\\_",
				"tests\\Unit\\app\\Services\\_TestCase.php"
			],
			[
				"_te",
				"tests\\Unit\\app\\Services\\_TestCase.php"
			],
			[
				"activitifindser",
				"tests\\Unit\\app\\Services\\Activity\\ActivityFindingServiceTest.php"
			],
			[
				"users_",
				"database\\migrations\\2014_10_12_000000_create_users_table.php"
			],
			[
				"data",
				"database\\database.sqlite"
			],
			[
				"d",
				"database\\database.sqlite"
			],
			[
				"databas",
				"database\\database.sqlite"
			],
			[
				"objs_",
				"database\\migrations\\2014_10_14_000000_create_objs_table.php"
			],
			[
				"sqlite",
				"database\\database.sqlite"
			],
			[
				"database/sqli",
				"database\\database.sqlite"
			],
			[
				"activities",
				"database\\migrations\\2014_10_23_000001_create_activities_table.php"
			],
			[
				"activityfindi",
				"tests\\Unit\\app\\Services\\Activity\\ActivityFindingServiceTest.php"
			],
			[
				"matches_",
				"database\\migrations\\2014_10_15_000004_create_matches_table.php"
			],
			[
				"Activities_",
				"database\\migrations\\2014_10_23_000001_create_activities_table.php"
			],
			[
				"actfacto",
				"database\\factories\\model\\ActivityFactory.php"
			],
			[
				"userfa",
				"database\\factories\\model\\UserFactory.php"
			],
			[
				"_testCase",
				"tests\\Unit\\_TestCase.php"
			],
			[
				"service",
				"app\\Service.php"
			],
			[
				"ser",
				"app\\Service.php"
			],
			[
				"cardpaging",
				"app\\Services\\Card\\CardPagingService.php"
			],
			[
				"servi",
				"app\\Service.php"
			],
			[
				"_t",
				"tests\\_TestCase.php"
			],
			[
				"collection",
				"app\\Database\\Collection.php"
			],
			[
				"servic",
				"app\\Service.php"
			],
			[
				"serv",
				"app\\Service.php"
			],
			[
				"CardActivityrequiredc",
				"tests\\Feature\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"CardActivityRequre",
				"app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingService.php"
			],
			[
				"cardactivitycreatser",
				"tests\\Feature\\app\\Services\\Activity\\CardActivityCreatingServiceTest.php"
			],
			[
				"service.",
				"app\\Service.php"
			],
			[
				"ServiceTest",
				"tests\\Unit\\app\\ServiceTest.php"
			],
			[
				"DailyCardGroupCreatingService",
				"app\\Services\\CardGroup\\DailyCardGroupCreatingService.php"
			],
			[
				"dailcyardgroupcreatingser",
				"app\\Services\\CardGroup\\DailyCardGroupCreatingService.php"
			],
			[
				"matchchatting",
				"app\\Services\\ChattingContent\\MatchChattingContentPagingService.php"
			],
			[
				"cardactivyrequir",
				"tests\\Unit\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"cardactivityrequired",
				"app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingService.php"
			],
			[
				"Match.",
				"app\\Database\\Models\\Match.php"
			],
			[
				"cardactivitycreates",
				"tests\\Feature\\app\\Services\\Activity\\CardActivityCreatingServiceTest.php"
			],
			[
				"cardAct",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"InstanceMocker",
				"tests\\_InstanceMocker.php"
			],
			[
				"RequiredCoinc",
				"app\\Services\\RequiredCoin\\RequiredCoinCountingService.php"
			],
			[
				"require",
				"app\\Services\\RequiredCoinExistingService.php"
			],
			[
				"cardactrequire",
				"tests\\Feature\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"instance",
				"tests\\_InstanceMocker.php"
			],
			[
				"NowTimezoneService",
				"app\\Services\\NowTimezoneService.php"
			],
			[
				"cardactivityrequiredcoincountingser",
				"tests\\Feature\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"CardActivityRequiredCoinCountingService",
				"app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingService.php"
			],
			[
				"cardactiv",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"tests\\unit\\",
				"tests\\Unit\\_InstanceMocker.php"
			],
			[
				"nowtime",
				"app\\Services\\NowTimezoneService.php"
			],
			[
				"datecha",
				"app\\Services\\DateTimeChangingService.php"
			],
			[
				"app/services/_tetscase",
				"tests\\Feature\\app\\Services\\_TestCase.php"
			],
			[
				"cardactivityrequire",
				"app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingService.php"
			],
			[
				"cardactivitycreatingse",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"activity.",
				"app\\Database\\Models\\Activity.php"
			],
			[
				"usedco",
				"app\\Services\\Coin\\UsedCoinCreatingService.php"
			],
			[
				"cardactivitycreatingser",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"create_coins",
				"database\\migrations\\2014_10_17_000001_create_coins_table.php"
			],
			[
				"Coin.",
				"app\\Database\\Models\\Coin.php"
			],
			[
				"Coins_",
				"database\\migrations\\2014_10_17_000001_create_used_coins_table.php"
			],
			[
				"UsedCoinCreatingService",
				"app\\Services\\Coin\\UsedCoinCreatingService.php"
			],
			[
				"added_c",
				"database\\migrations\\2014_10_18_000001_create_added_coins_table.php"
			],
			[
				"RequiredCoinExistingService",
				"app\\Services\\RequiredCoinExistingService.php"
			],
			[
				"validator",
				"app\\Validation\\Validator.php"
			],
			[
				"valiat",
				"app\\Validation\\Validator.php"
			],
			[
				"validation",
				"resources\\lang\\en\\validation.php"
			],
			[
				"cardact",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"cardactivicreatse",
				"tests\\Feature\\app\\Services\\Activity\\CardActivityCreatingServiceTest.php"
			],
			[
				"cardactvity",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"caractivitcreatse",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"cardactivitycreasertest",
				"tests\\Unit\\app\\Services\\Activity\\CardActivityCreatingServiceTest.php"
			],
			[
				"cardactivi",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"CardActivityRequiredCoinCountingServicetest",
				"tests\\Unit\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"nowt",
				"app\\Services\\NowTimezoneService.php"
			],
			[
				"cardactivityrequiredcoinc",
				"tests\\Unit\\app\\Services\\RequiredCoin\\CardActivityRequiredCoinCountingServiceTest.php"
			],
			[
				"DateTimeChangingService",
				"app\\Services\\DateTimeChangingService.php"
			],
			[
				"datetime",
				"app\\Services\\DateTimeChangingService.php"
			],
			[
				"cardactivit",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"cardactivitycreat",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"example",
				"tests\\Feature\\ExampleTest.php"
			],
			[
				"list",
				"app\\Services\\ListingService.php"
			],
			[
				"cardAc",
				"app\\Services\\Activity\\CardActivityListingService.php"
			],
			[
				"cardFa",
				"database\\factories\\model\\CardFactory.php"
			],
			[
				"ActivityFindingServi",
				"app\\Services\\Activity\\ActivityFindingService.php"
			],
			[
				"ActivityFindingService",
				"app\\Services\\Activity\\ActivityFindingService.php"
			],
			[
				"activityfind",
				"app\\Services\\Activity\\ActivityFindingService.php"
			],
			[
				"cardgroucardtest",
				"tests\\Feature\\app\\Services\\Card\\CardGroupCardListingServiceTest.php"
			],
			[
				"unit/",
				"tests\\Unit\\_TestCase.php"
			],
			[
				"cardp",
				"tests\\Feature\\Service\\Card\\CardPagingServiceTest.php"
			],
			[
				"modelF",
				"database\\factories\\model\\ModelFactory.php"
			],
			[
				"model.",
				"app\\Database\\Model.php"
			],
			[
				"model",
				"app\\Database\\Model.php"
			],
			[
				"user",
				"app\\Database\\Models\\User.php"
			],
			[
				"userF",
				"database\\factories\\UserFactory.php"
			],
			[
				"objcoll",
				"app\\Database\\Collections\\ObjCollection.php"
			],
			[
				"MODELf",
				"database\\factories\\model\\ModelFactory.php"
			],
			[
				"matchF",
				"database\\factories\\model\\MatchFactory.php"
			],
			[
				"cardgroup",
				"database\\factories\\model\\CardGroupFactory.php"
			],
			[
				"cardgr",
				"database\\factories\\model\\CardGroupFactory.php"
			],
			[
				"modelf",
				"database\\factories\\model\\ModelFactory.php"
			],
			[
				"cardgroufa",
				"database\\factories\\model\\CardGroupFactory.php"
			],
			[
				"modelFa",
				"database\\factories\\model\\ModelFactory.php"
			],
			[
				"ModelFactory",
				"database\\factories\\model\\ModelFactory.php"
			],
			[
				"cards_",
				"database\\migrations\\2014_10_16_000001_create_cards_table.php"
			],
			[
				"cardgroupfa",
				"database\\factories\\model\\CardGroupFactory.php"
			],
			[
				"card",
				"app\\Database\\Models\\Card.php"
			],
			[
				"obj",
				"app\\Database\\Models\\Obj.php"
			],
			[
				"models/use",
				"app\\Database\\Models\\User.php"
			],
			[
				"reply",
				"app\\Database\\Models\\Reply.php"
			],
			[
				"question",
				"database\\migrations\\2014_10_25_000001_create_question_posts_table.php"
			],
			[
				"questi",
				"tests\\Unit\\app\\Database\\Queries\\QuestionPostQueryTest.php"
			],
			[
				"w",
				"routes\\web.php"
			],
			[
				"web",
				"routes\\web.php"
			],
			[
				"rout",
				"routes\\web.php"
			],
			[
				"CardGroupCardListingService",
				"app\\Services\\Card\\CardGroupCardListingService.php"
			],
			[
				"cardactivitc",
				"app\\Services\\Activity\\CardActivityCreatingService.php"
			],
			[
				"per",
				"tests\\Unit\\app\\Services\\PermittedUserRequiringServiceTest.php"
			],
			[
				"PermittedUserRequiringService",
				"app\\Services\\PermittedUserRequiringService.php"
			],
			[
				"cardFi",
				"app\\Services\\Card\\CardFindingService.php"
			],
			[
				"cardFin",
				"app\\Services\\Card\\CardFindingService.php"
			],
			[
				"FindingService",
				"app\\Services\\FindingService.php"
			],
			[
				"CardFindingService",
				"app\\Services\\Card\\CardFindingService.php"
			],
			[
				"CardActivityListingService",
				"app\\Services\\Activity\\CardActivityListingService.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\xampp\\htdocs\\server\\.sublime-project.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"request",
				"Request"
			],
			[
				"abstract",
				"AbstractAdapter"
			],
			[
				"ke",
				"KernelEvent"
			]
		],
		"width": 1074.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 447.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
