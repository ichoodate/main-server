{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"key",
				"keywordIds"
			],
			[
				"de",
				"de99a620c50f2990e87144735cd357e7"
			],
			[
				"PwdRe",
				"PwdReset"
			],
			[
				"Not",
				"NoticePagingService"
			],
			[
				"res",
				"residence-states"
			],
			[
				"keyword",
				"keyword_id"
			],
			[
				"validate",
				"validated"
			],
			[
				"del",
				"deleted_at"
			],
			[
				"exp",
				"expectId"
			],
			[
				"_",
				"_attributes"
			],
			[
				"User",
				"UserIdealTypeKwdPvt"
			],
			[
				"N",
				"Notification"
			],
			[
				"qUER",
				"QueryMocker"
			],
			[
				"Model",
				"ModelMocker"
			],
			[
				"ret",
				"return"
			],
			[
				"order_",
				"order_amount"
			],
			[
				"payemn",
				"paymentCurrency"
			],
			[
				"paye",
				"paymentAmount"
			],
			[
				"payem",
				"paymentCurrency"
			],
			[
				"pay",
				"paymentAmount"
			],
			[
				"payme",
				"payment_currency"
			],
			[
				"payment_",
				"payment_amount"
			],
			[
				"Res",
				"ResidenceState"
			],
			[
				"Re",
				"ResidenceCountry"
			],
			[
				"residenc",
				"residenceCountry"
			],
			[
				"is_in",
				"is_int"
			],
			[
				"PwdReset",
				"PwdResetUpdatingService"
			],
			[
				"E",
				"email"
			],
			[
				"defin",
				"defined"
			],
			[
				"same",
				"same_email_user"
			],
			[
				"uSER",
				"User"
			],
			[
				"Chat",
				"ChattingContentFindingService"
			],
			[
				"In",
				"InvoiceFindingService"
			],
			[
				"dir",
				"dirPath"
			],
			[
				"str_rep",
				"str_replace"
			],
			[
				"No",
				"NoticePagingService"
			],
			[
				"Stat",
				"StateFindingService"
			],
			[
				"Co",
				"CountryFindingService"
			],
			[
				"Sta",
				"StatePagingService"
			],
			[
				"Country",
				"CountryPagingService"
			],
			[
				"coun",
				"country"
			],
			[
				"cou",
				"countryId"
			],
			[
				"BIrth",
				"BirthListingService"
			],
			[
				"Error",
				"depInvalidError"
			],
			[
				"loadA",
				"loadAvailableRuleListWith"
			],
			[
				"bind",
				"bindKey"
			],
			[
				"cARD",
				"cardGroup"
			],
			[
				"require",
				"required_coin"
			],
			[
				"resol",
				"resolved"
			],
			[
				"card_gr",
				"card_group_id"
			],
			[
				"ar",
				"argsDic"
			],
			[
				"uniq",
				"uniqueString"
			],
			[
				"Da",
				"DateTimeZone"
			],
			[
				"aft",
				"afterTimezone"
			],
			[
				"befo",
				"beforeTime"
			],
			[
				"NOW",
				"nowTimezoneDateToUtc"
			],
			[
				"cardG",
				"cardGroupQuery2"
			],
			[
				"cardGr",
				"cardGroupBaseQuery"
			],
			[
				"card",
				"cardQuery2"
			],
			[
				"uni",
				"unionAll"
			],
			[
				"ver",
				"verifyLoader"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"call_use",
				"call_user_func"
			],
			[
				"verf",
				"verifyArrLoader"
			],
			[
				"ava",
				"availableOrderByFields"
			],
			[
				"resolved",
				"resolvedNames"
			],
			[
				"array_key",
				"array_key_exists"
			],
			[
				"o",
				"orderBy"
			],
			[
				"resolveA",
				"resolveArrLoader"
			],
			[
				"reoslveA",
				"resolveArrBindName"
			],
			[
				"exc",
				"expect"
			],
			[
				"expec",
				"expectClosure"
			],
			[
				"now_",
				"now_timezone_date"
			],
			[
				"authuse",
				"authUserQuery"
			],
			[
				"match",
				"matchingUserQuery"
			],
			[
				"INST",
				"inst"
			],
			[
				"testG",
				"testGetArrLoaderModel"
			],
			[
				"now",
				"nowTimezoneDate"
			],
			[
				"TIME",
				"timezone"
			],
			[
				"eval",
				"evaluatedTime"
			],
			[
				"lim",
				"limited_max_count"
			],
			[
				"isF",
				"isFreeCount"
			],
			[
				"veri",
				"verifyArrRuleLists"
			],
			[
				"li",
				"limitedMinTime"
			],
			[
				"AUTH",
				"auth_user"
			],
			[
				"Tick",
				"TicketFindingService"
			],
			[
				"matchUser",
				"matchingUsers"
			],
			[
				"aval",
				"available_fields"
			],
			[
				"Card",
				"CardGroup"
			],
			[
				"functio",
				"function"
			],
			[
				"activi",
				"ACTIVITY_ID"
			],
			[
				"Mat",
				"Match"
			],
			[
				"type_",
				"TYPE_CARD_FLIP"
			],
			[
				"matcing",
				"matchingUserStatus"
			],
			[
				"authUs",
				"authUserStatus"
			],
			[
				"suQ",
				"subQuery1"
			],
			[
				"nameK",
				"nameKeys"
			],
			[
				"Ser",
				"Service"
			],
			[
				"function",
				"function_exists"
			],
			[
				"getArr",
				"getArrCallbackLists"
			],
			[
				"Act",
				"ActivityListReadService"
			],
			[
				"Injec",
				"Injectable\talias"
			],
			[
				"pr",
				"profile\tdirectory"
			],
			[
				"for",
				"for\tfor (…) {…} (Improved Native For-Loop)"
			],
			[
				"im",
				"imports\tproperty"
			],
			[
				"align",
				"align-content\tproperty"
			],
			[
				"par",
				"partInfo\tconst"
			],
			[
				"co",
				"container.module\tscript"
			],
			[
				"Ren",
				"Renderer2\talias"
			],
			[
				"pro",
				"providers\tproperty"
			],
			[
				"edi",
				"edited\tproperty"
			],
			[
				"tran",
				"transparent\tbackground"
			],
			[
				"ab",
				"absolute\tposition"
			],
			[
				"mo",
				"dropdown-select.module\tscript"
			],
			[
				"mode",
				"moduleFactory\tparameter"
			],
			[
				"modul",
				"moduleFactory\tparameter"
			],
			[
				"module",
				"modulePath\tlet"
			],
			[
				"import",
				"imports\tproperty"
			],
			[
				"imp",
				"import\timports a module …"
			],
			[
				"func",
				"function\tkeyword"
			],
			[
				"Comp",
				"ComponentFactoryResolver\talias"
			],
			[
				"fo",
				"for\tfor (…) {…} (Improved Native For-Loop)"
			],
			[
				"Mai",
				"MainHeaderComponent\talias"
			],
			[
				"cli",
				"client-e2e"
			],
			[
				"usde",
				"usedCoin"
			],
			[
				"TYPE_CREATE",
				"TYPE_CREATE_CARD_GROUP_DAILY"
			],
			[
				"TYPE_CREATE_",
				"TYPE_CREATE_CARD_GROUP"
			],
			[
				"withd",
				"withdrawCoin"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"control",
				"Package Control: Disable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"PACKA",
				"Package Control: Install Package"
			],
			[
				"TABLE",
				"AlignTab: Table Mode"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"a",
				"AlignTab: Live Preview Mode"
			],
			[
				"",
				"AlignTab"
			],
			[
				"A",
				"AlignTab"
			],
			[
				"Al",
				"AlignTab"
			],
			[
				"al",
				"AlignTab: Live Preview Mode"
			],
			[
				"table",
				"AlignTab: Live Preview Mode"
			],
			[
				"aligntab",
				"AlignTab: Table Mode"
			],
			[
				"tabm",
				"AlignTab: Table Mode"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 425.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"view.run_command(\"test\")",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"import sys",
			"print(sys.path)",
			"import sys",
			"print(sys.path)",
			"print (sys.path)",
			"print(sys.path)",
			"print(sys.version)",
			"where python",
			"os.path.dirname(sys.executable)",
			"import sys",
			"import os",
			"view.run_command(\"test\")",
			"view.run_command(\"undo\")",
			"view.run_command(\"test\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"hello2\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"hello2\")",
			"view.run_command(\"hello\")",
			"view.run_command(\"example\")",
			"import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"  import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/xampp/htdocs/server",
		"/G/xampp/htdocs/server/app",
		"/G/xampp/htdocs/server/app/Database",
		"/G/xampp/htdocs/server/app/Database/Models",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword",
		"/G/xampp/htdocs/server/app/Http",
		"/G/xampp/htdocs/server/app/Http/Controllers",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/IdealTypeKeyword",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/SelfKeyword",
		"/G/xampp/htdocs/server/app/Http/Middleware",
		"/G/xampp/htdocs/server/app/Services",
		"/G/xampp/htdocs/server/app/Services/ChattingContent",
		"/G/xampp/htdocs/server/app/Services/Keyword",
		"/G/xampp/htdocs/server/app/Services/Keyword/AgeRange",
		"/G/xampp/htdocs/server/app/Services/Keyword/Career",
		"/G/xampp/htdocs/server/app/Services/Keyword/Nationality",
		"/G/xampp/htdocs/server/app/Services/Keyword/Religion",
		"/G/xampp/htdocs/server/app/Services/Keyword/Residence",
		"/G/xampp/htdocs/server/app/Services/Keyword/StatureRange",
		"/G/xampp/htdocs/server/app/Services/Keyword/WeightRange",
		"/G/xampp/htdocs/server/app/Services/User",
		"/G/xampp/htdocs/server/app/Services/UserIdealTypeKwdPvt",
		"/G/xampp/htdocs/server/app/Services/UserSelfKwdPvt",
		"/G/xampp/htdocs/server/database",
		"/G/xampp/htdocs/server/database/factories",
		"/G/xampp/htdocs/server/database/factories/Models",
		"/G/xampp/htdocs/server/database/factories/Models/Keyword",
		"/G/xampp/htdocs/server/database/migrations",
		"/G/xampp/htdocs/server/database/seeds",
		"/G/xampp/htdocs/server/database/seeds/Keyword",
		"/G/xampp/htdocs/server/storage",
		"/G/xampp/htdocs/server/tests",
		"/G/xampp/htdocs/server/tests/Functional",
		"/G/xampp/htdocs/server/tests/Functional/Api",
		"/G/xampp/htdocs/server/tests/Functional/Api/IdealTypeKeyword",
		"/G/xampp/htdocs/server/tests/Functional/Api/IdealTypeKeywords",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/AgeRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/BirthYears",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Bloods",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Bodies",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Careers",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Countries",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Drinks",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/EduBgs",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Hobbies",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Languages",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxAgeRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxStatureRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxWeightRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinAgeRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinStatureRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinWeightRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Nationalities",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Religions",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Smokes",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/StatureRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Statures",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/WeightRanges",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Weights",
		"/G/xampp/htdocs/server/tests/Functional/Api/Localizables",
		"/G/xampp/htdocs/server/tests/Functional/Api/Matches",
		"/G/xampp/htdocs/server/tests/Functional/Api/Notices",
		"/G/xampp/htdocs/server/tests/Functional/Api/Notifications",
		"/G/xampp/htdocs/server/tests/Functional/Api/SelfKeyword",
		"/G/xampp/htdocs/server/tests/Unit",
		"/G/xampp/htdocs/server/tests/Unit/app",
		"/G/xampp/htdocs/server/tests/Unit/app/Database",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/Keyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries/Keyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Http",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/IdealTypeKeyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/Keyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/SelfKeyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Services",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/Career",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/Nationality",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/UserIdealTypeKwdPvt",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/UserSelfKwdPvt"
	],
	"file_history":
	[
		"/G/xampp/mysql/bin/my.ini",
		"/G/xampp/htdocs/server/app/Services/UserIdealTypeKwdPvt/HobbyUserIdealTypeKwdPvtUpdatingService.php",
		"/G/xampp/htdocs/server/app/Services/UserSelfKwdPvt/HobbyUserSelfKwdPvtUpdatingService.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/IdealTypeKeyword/HobbyControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/SelfKeyword/HobbyControllerTest.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/SelfKeyword/HobbyController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/IdealTypeKeyword/HobbyController.php",
		"/G/xampp/htdocs/server/routes/web.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/_TestCase.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/IdealTypeKeyword/HobbiesPostTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/SelfKeyword/HobbiesPostTest.php",
		"/G/xampp/htdocs/server/tests/Functional/_TestCase.php",
		"/G/xampp/htdocs/server/app/Services/User/MatchingUserRandommingService.php",
		"/G/xampp/htdocs/server/app/Database/Collection.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/IdealTypeKeyword/NationalityControllerTest.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/NationalityController.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/Keyword/NationalityControllerTest.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/Nationality.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/Nationality/NationalityListingServiceTest.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/SelfKeyword/NationalityController.php",
		"/G/xampp/htdocs/server/database/seeds/DatabaseSeeder.php",
		"/G/xampp/htdocs/server/database/migrations/002____create_keyword_nationalities_table.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/Country.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/Nationality/NationalityListingService.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/State.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/Residence.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/State/StateListingService.php",
		"/G/xampp/htdocs/server/app/Services/FindingService.php",
		"/G/xampp/htdocs/server/app/Services/UserSelfKwdPvt/UserSelfKwdPvtListingService.php",
		"/G/xampp/htdocs/server/app/Services/ListingService.php",
		"/G/xampp/htdocs/server/app/Database/Models/ChattingContent.php",
		"/G/xampp/htdocs/server/database/seeds/UserIdealTypeKwdPvtTableSeeder.php",
		"/G/xampp/htdocs/server/database/seeds/UserSelfKwdPvtTableSeeder.php",
		"/G/xampp/htdocs/server/database/TableSeeder.php",
		"/G/xampp/htdocs/server/database/seeds/Keyword/ResidenceTableSeeder.php",
		"/G/xampp/htdocs/server/app/Providers/AppServiceProvider.php",
		"/G/xampp/htdocs/server/database/migrations/003____create_keyword_residences_table.php",
		"/G/xampp/htdocs/server/database/migrations/002____create_keyword_careers_table.php",
		"/G/xampp/htdocs/server/database/seeds/Keyword/NationalityTableSeeder.php",
		"/G/xampp/htdocs/server/database/factories/Models/Keyword/ResidenceFactory.php",
		"/G/xampp/htdocs/server/app/Database/Queries/Keyword/NationalityQuery.php",
		"/G/xampp/htdocs/server/app/Database/Queries/Keyword/StateQuery.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/Keyword/NationalityTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries/Keyword/NationalityQueryTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/Keyword/StateTest.php",
		"/G/xampp/htdocs/server/app/Database/Models/UserSelfKwdPvt.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/Career.php",
		"/G/xampp/htdocs/server/database/seeds/Keyword/StateTableSeeder.php",
		"/G/xampp/htdocs/server/database/migrations/002____create_keyword_states_table.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/StateController.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/State/StateFindingService.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/State/StateListingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries/Keyword/StateQueryTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/Keyword/CountryTest.php",
		"/G/xampp/htdocs/server/app/Database/Queries/Keyword/CountryQuery.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries/Keyword/CountryQueryTest.php",
		"/G/xampp/htdocs/server_old/app/Database/Models/KeywordCountry.php",
		"/G/xampp/htdocs/server/database/seeds/Keyword/CountryTableSeeder.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/IdealTypeKeyword/ResidenceController.php",
		"/G/xampp/htdocs/server/app/Database/Queries/Keyword/ResidenceQuery.php",
		"/G/xampp/htdocs/server/app/Database/Collections/Keyword/ResidenceCollection.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/ResidenceCountry/ResidenceFindingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/Career/CareerListingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/ResidenceCountry/IdGetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/SelfKeyword/ResidencesPostTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/Keyword/ResidenceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Queries/Keyword/ResidenceQueryTest.php",
		"/G/xampp/htdocs/server/app/Database/Models/Keyword/ResidenceCountry.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/IdealTypeKeyword/ResidenceControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/Keyword/CountryControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/Keyword/ResidenceControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/SelfKeyword/ResidenceControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/Keyword/ResidenceCountry/ResidenceListingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/SelfKeyword/ResidenceCountryControllerTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/UserIdealTypeKwdPvt/ResidenceUserIdealTypeKwdPvtUpdatingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Services/UserSelfKwdPvt/ResidenceUserSelfKwdPvtUpdatingServiceTest.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Database/Models/ObjTest.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/CountryController.php",
		"/G/xampp/htdocs/server/app/Services/UserSelfKwdPvt/ResidenceUserSelfKwdPvtUpdatingService.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Countries/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Countries/IdGetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/IdealTypeKeyword/ResidencesPostTest.php",
		"/G/xampp/htdocs/server/app/Services/UserIdealTypeKwdPvt/ResidenceUserIdealTypeKwdPvtUpdatingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/Country/CountryFindingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/Residence/ResidenceFindingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/Residence/ResidenceListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/Career/CareerListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/ResidenceCountry/CountryResidenceCountryListingService.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/ResidenceController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/SelfKeyword/ResidenceController.php",
		"/G/xampp/htdocs/server/app/Database/Queries/Keyword/ResidenceCountryQuery.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/IdealTypeKeyword/ResidenceCountryController.php",
		"/G/xampp/htdocs/server/app/Database/Collections/Keyword/CountryCollection.php",
		"/G/xampp/htdocs/server/app/Database/Collections/Keyword/ResidenceCountryCollection.php",
		"/G/xampp/htdocs/server/tests/Unit/app/Http/Controllers/Api/Keyword/StateControllerTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/States/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/States/IdGetTest.php",
		"/G/xampp/htdocs/server/package.json",
		"/G/xampp/htdocs/server/app/Services/User/UserUpdatingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/StatureRange/MaxStatureRangeListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/StatureRange/MinStatureRangeListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/AgeRange/MaxAgeRangeListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/WeightRange/MaxWeightRangeListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/WeightRange/MinWeightRangeListingService.php",
		"/G/xampp/htdocs/server/app/Services/Keyword/AgeRange/MinAgeRangeListingService.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MaxStatureRangeController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MinStatureRangeController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MinAgeRangeController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MinWeightRangeController.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MaxWeightRangeController.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxStatureRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxWeightRanges/GetTest.php",
		"/G/xampp/htdocs/server/app/Http/Controllers/Api/Keyword/MaxAgeRangeController.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MaxAgeRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinAgeRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinStatureRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/MinWeightRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Nationalities/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Religions/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Smokes/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/StatureRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Statures/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/WeightRanges/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Weights/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Notices/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/BirthYears/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Bloods/GetTest.php",
		"/G/xampp/htdocs/server/tests/Functional/Api/Keyword/Bodies/GetTest.php"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"-G:\\xampp\\htdocs\\server\\public\\*",
			"-G:\\xampp\\htdocs\\server\\public\\**.*",
			"-G:\\xampp\\htdocs\\server\\public\\js\\*.*",
			"",
			"-G:\\xampp\\htdocs\\server\\public\\*\\*",
			"-G:\\xampp\\htdocs\\server\\public\\*",
			"-G:\\xampp\\htdocs\\server\\public\\",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"bind-address",
			"keyword_id",
			"keywordId",
			"keyword_id",
			"keywordId",
			"keyword_id",
			" assertResultWithPersisting",
			"sortByIds",
			"sortByIds(",
			"Residence",
			"Keyword\\Nation",
			"Nation",
			"residences",
			"nationalities",
			"related",
			"country",
			"COUNTRY",
			"country",
			"Residence",
			"residence",
			"load",
			"        // ",
			"COUJNTRY",
			"RELATED",
			"bigInteger('parent_id')",
			"ResidenceState",
			"State",
			"ResidenceState",
			"State",
			"ResidenceState",
			"Card",
			"Country",
			"Keyword",
			"Countries",
			"ResidenceCountry",
			"Country",
			"ResidenceCountry",
			"Country",
			"Career",
			"Country",
			"  =",
			"resiCountry",
			"ResidenceCountry",
			"resiCountry",
			"ResidenceCountry",
			"Country",
			"ResidenceCountry",
			"Country",
			"ResidenceCountry",
			"$keywordCountry",
			"Country",
			"$keywordCountry",
			"Country",
			"ResidenceCountry",
			"Country",
			"ResidenceCountry",
			"Country",
			"= '",
			"Religion",
			"Country",
			"COUNTRY_ID",
			"Country",
			"State",
			"StateListingService",
			"UserUpdatingService",
			"min",
			"query->qOrder",
			"class Min",
			"Stature",
			"Age",
			"Stature",
			"Age",
			"Stature",
			"Age",
			"Min",
			"min",
			"WeightRange",
			"Age",
			"AgeRange",
			"min",
			"Max",
			"min",
			"career",
			"server",
			"Middleware\\Api",
			"Middlewares\\Api",
			"Api",
			"Authenticate",
			"Middleware\\Authenticate",
			"nullable",
			"CareerListingService",
			"                => request()->route()->id\n",
			"                => request()->route()->smoke\n",
			"                => request()->route()->religion\n",
			"                => request()->route()->language\n",
			"                => request()->route()->hobby\n",
			"                => request()->route()->education_background\n",
			"                => request()->route()->drink\n",
			"                => request()->route()->country\n",
			"                => request()->route()->career\n",
			"                => request()->route()->body\n",
			"                => request()->route()->blood\n",
			"                => request()->route()->birth_year\n",
			"request()->route()->parameters()",
			"age_range",
			"request()->route()->id",
			"route()->id",
			"route()->smoke",
			"route()->id",
			"->id",
			"route()->edu_bg",
			"edu",
			"route()->id",
			"route()",
			"route()->id",
			"()->id",
			"route()->id",
			"        );\n",
			"keyword/caree",
			"card_group",
			"keyword\\",
			"card_group",
			"_",
			"keyword\\",
			"restify(",
			"validate(",
			"getAvailableRulesWith",
			"getValidationErrors("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"namespace",
			"            \n",
			"Career::TYPE",
			"            'auth_user'\n                => 'authorized user',",
			"KwdPvt::class)->query()\n                    ->qWhere(UserSelfKwdPvt::USER_ID, $authUser->getKey())\n                    ->qWhereIn(UserSelfKwdPvt::KEYWORD_ID, $keywordIds)\n                    ->delete()",
			"KwdPvt::class)->query()\n                    ->qWhere(UserIdealTypeKwdPvt::USER_ID, $authUser->getKey())\n                    ->qWhereIn(UserIdealTypeKwdPvt::KEYWORD_ID, $keywordIds)\n                    ->delete()"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 517.0
	},
	"pinned_build_system": "Packages/User/python36.sublime-build",
	"project": "laravel.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"hobbyuseselfu",
				"app\\Services\\UserSelfKwdPvt\\HobbyUserSelfKwdPvtUpdatingService.php"
			],
			[
				"hobbycontrollertest",
				"tests\\Unit\\app\\Http\\Controllers\\Api\\SelfKeyword\\HobbyControllerTest.php"
			],
			[
				"HobbyControllertest",
				"tests\\Unit\\app\\Http\\Controllers\\Api\\IdealTypeKeyword\\HobbyControllerTest.php"
			],
			[
				"HobbyCon",
				"app\\Http\\Controllers\\Api\\SelfKeyword\\HobbyController.php"
			],
			[
				"hobbies",
				"tests\\Functional\\Api\\SelfKeyword\\HobbiesPostTest.php"
			],
			[
				"Hobbies",
				"tests\\Functional\\Api\\IdealTypeKeyword\\HobbiesPostTest.php"
			],
			[
				"HobbyUserIdealTypeKwdPvtUpdatingService",
				"app\\Services\\UserIdealTypeKwdPvt\\HobbyUserIdealTypeKwdPvtUpdatingService.php"
			],
			[
				"hobbycon",
				"app\\Http\\Controllers\\Api\\IdealTypeKeyword\\HobbyController.php"
			],
			[
				"coll",
				"app\\Database\\Collection.php"
			],
			[
				"web",
				"routes\\web.php"
			],
			[
				"nation",
				"app\\Database\\Models\\Keyword\\Nationality.php"
			],
			[
				"NationalityController",
				"app\\Http\\Controllers\\Api\\Keyword\\NationalityController.php"
			],
			[
				"NationalityListingService",
				"tests\\Unit\\app\\Services\\Keyword\\Nationality\\NationalityListingServiceTest.php"
			],
			[
				"Keyword\\NationalityController",
				"tests\\Unit\\app\\Http\\Controllers\\Api\\Keyword\\NationalityControllerTest.php"
			],
			[
				"nationalities_",
				"database\\migrations\\002____create_keyword_nationalities_table.php"
			],
			[
				"na",
				"app\\Database\\Models\\Keyword\\Nationality.php"
			],
			[
				"Nationality.",
				"app\\Database\\Models\\Keyword\\Nationality.php"
			],
			[
				"database",
				"database\\seeds\\DatabaseSeeder.php"
			],
			[
				"NationaliTIES_",
				"database\\migrations\\002____create_keyword_nationalities_table.php"
			],
			[
				"NationalitIES_",
				"database\\migrations\\002____create_keyword_nationalities_table.php"
			],
			[
				"Nationality",
				"app\\Services\\Keyword\\Nationality\\NationalityListingService.php"
			],
			[
				"count",
				"app\\Database\\Models\\Keyword\\Country.php"
			],
			[
				"we",
				"routes\\web.php"
			],
			[
				"state",
				"app\\Database\\Models\\Keyword\\State.php"
			],
			[
				"statelist",
				"app\\Services\\Keyword\\State\\StateListingService.php"
			],
			[
				"country.",
				"app\\Database\\Models\\Keyword\\Country.php"
			],
			[
				"resi",
				"app\\Database\\Models\\Keyword\\Residence.php"
			],
			[
				"chatting",
				"app\\Database\\Models\\ChattingContent.php"
			],
			[
				"findi",
				"app\\Services\\FindingService.php"
			],
			[
				"ListingService",
				"app\\Services\\ListingService.php"
			],
			[
				"selflist",
				"app\\Services\\UserSelfKwdPvt\\UserSelfKwdPvtListingService.php"
			],
			[
				"residenc.",
				"app\\Database\\Models\\Keyword\\Residence.php"
			],
			[
				"state.",
				"app\\Database\\Models\\Keyword\\State.php"
			],
			[
				"data",
				"database\\seeds\\DatabaseSeeder.php"
			],
			[
				"userselfpvttable",
				"database\\seeds\\UserSelfKwdPvtTableSeeder.php"
			],
			[
				"databases",
				"database\\seeds\\DatabaseSeeder.php"
			],
			[
				"table",
				"database\\TableSeeder.php"
			],
			[
				"useridealtable",
				"database\\seeds\\UserIdealTypeKwdPvtTableSeeder.php"
			],
			[
				"residencetable",
				"database\\seeds\\Keyword\\ResidenceTableSeeder.php"
			],
			[
				"keyword_car",
				"database\\migrations\\002____create_keyword_careers_table.php"
			],
			[
				"keyword_resid",
				"database\\migrations\\003____create_keyword_residences_table.php"
			],
			[
				"apppro",
				"app\\Providers\\AppServiceProvider.php"
			],
			[
				"nationalitytabl",
				"database\\seeds\\Keyword\\NationalityTableSeeder.php"
			],
			[
				"Residence",
				"database\\factories\\Models\\Keyword\\ResidenceFactory.php"
			],
			[
				"nationality",
				"app\\Database\\Queries\\Keyword\\NationalityQuery.php"
			],
			[
				"statequery",
				"app\\Database\\Queries\\Keyword\\StateQuery.php"
			],
			[
				"nationalityquerytest",
				"tests\\Unit\\app\\Database\\Queries\\Keyword\\NationalityQueryTest.php"
			],
			[
				"nationalityqu",
				"app\\Database\\Queries\\Keyword\\NationalityQuery.php"
			],
			[
				"nationalitytest",
				"tests\\Unit\\app\\Database\\Models\\Keyword\\NationalityTest.php"
			],
			[
				"statetest",
				"tests\\Unit\\app\\Database\\Models\\Keyword\\StateTest.php"
			],
			[
				"Nationalitylist",
				"app\\Services\\Keyword\\Nationality\\NationalityListingService.php"
			],
			[
				"selfkwdpv",
				"app\\Database\\Models\\UserSelfKwdPvt.php"
			],
			[
				"career",
				"app\\Database\\Models\\Keyword\\Career.php"
			],
			[
				"selfpvt.",
				"app\\Database\\Models\\UserSelfKwdPvt.php"
			],
			[
				"residen",
				"app\\Database\\Models\\Keyword\\Residence.php"
			],
			[
				"statetable",
				"database\\seeds\\Keyword\\StateTableSeeder.php"
			],
			[
				"residences_",
				"database\\migrations\\003____create_keyword_residences_table.php"
			],
			[
				"databasesee",
				"database\\seeds\\DatabaseSeeder.php"
			],
			[
				"databasetable",
				"database\\TableSeeder.php"
			],
			[
				"statecon",
				"app\\Http\\Controllers\\Api\\Keyword\\StateController.php"
			],
			[
				"statefin",
				"app\\Services\\Keyword\\State\\StateFindingService.php"
			],
			[
				"StateListingServicetest",
				"tests\\Unit\\app\\Services\\Keyword\\State\\StateListingServiceTest.php"
			],
			[
				"stateli",
				"app\\Services\\Keyword\\State\\StateListingService.php"
			],
			[
				"statequerytest",
				"tests\\Unit\\app\\Database\\Queries\\Keyword\\StateQueryTest.php"
			],
			[
				"statequer",
				"app\\Database\\Queries\\Keyword\\StateQuery.php"
			],
			[
				"Statetest",
				"tests\\Unit\\app\\Database\\Models\\Keyword\\StateTest.php"
			],
			[
				"countryquerytest",
				"tests\\Unit\\app\\Database\\Queries\\Keyword\\CountryQueryTest.php"
			],
			[
				"countryquery",
				"app\\Database\\Queries\\Keyword\\CountryQuery.php"
			],
			[
				"countrytest",
				"tests\\Unit\\app\\Database\\Models\\Keyword\\CountryTest.php"
			],
			[
				"residence",
				"database\\seeds\\Keyword\\ResidenceTableSeeder.php"
			],
			[
				"country",
				"app\\Database\\Models\\Keyword\\Country.php"
			],
			[
				"state.p",
				"app\\Database\\Models\\Keyword\\State.php"
			],
			[
				"countrytable",
				"database\\seeds\\Keyword\\CountryTableSeeder.php"
			],
			[
				"residencecoun",
				"database\\migrations\\003____create_keyword_residence_countries_table.php"
			],
			[
				"residencecounty",
				"app\\Database\\Collections\\Keyword\\ResidenceCountryCollection.php"
			],
			[
				"Residence.",
				"database\\factories\\Models\\Keyword\\ResidenceFactory.php"
			],
			[
				"package",
				"package.json"
			],
			[
				"userupdate",
				"app\\Services\\User\\UserUpdatingService.php"
			],
			[
				"minagerang",
				"app\\Services\\Keyword\\AgeRange\\MinAgeRangeListingService.php"
			],
			[
				"maxagerange",
				"app\\Services\\Keyword\\AgeRange\\MaxAgeRangeListingService.php"
			],
			[
				"Api\\Keyword\\AgeRangeController",
				"app\\Http\\Controllers\\Api\\Keyword\\AgeRangeController.php"
			],
			[
				"agerangelis",
				"app\\Services\\Keyword\\AgeRange\\AgeRangeListingService.php"
			],
			[
				"selfhobb",
				"app\\Http\\Controllers\\Api\\SelfKeyword\\HobbyController.php"
			],
			[
				"self",
				"app\\Http\\Controllers\\Api\\SelfKeywordController.php"
			],
			[
				"careerlist",
				"app\\Services\\Keyword\\Career\\CareerListingService.php"
			],
			[
				"parame",
				"app\\Http\\Middleware\\ParameterCasting.php"
			],
			[
				"ParameterCasting",
				"app\\Http\\Middleware\\ParameterCasting.php"
			],
			[
				"vali",
				"app\\Validation\\Validator.php"
			],
			[
				"CareerListingService",
				"app\\Services\\Keyword\\Career\\CareerListingService.php"
			],
			[
				"career.",
				"app\\Database\\Models\\Keyword\\Career.php"
			],
			[
				"keyword/careers/id",
				"tests\\Functional\\Api\\Keyword\\Careers\\IdGetTest.php"
			],
			[
				"Api\\Keyword\\CareerController",
				"app\\Http\\Controllers\\Api\\Keyword\\CareerController.php"
			],
			[
				"CareerController",
				"app\\Http\\Controllers\\Api\\Keyword\\CareerController.php"
			],
			[
				"AgeRangeController",
				"app\\Http\\Controllers\\Api\\Keyword\\AgeRangeController.php"
			],
			[
				"agerangecont",
				"app\\Http\\Controllers\\Api\\IdealTypeKeyword\\AgeRangeController.php"
			],
			[
				"careerlistingsertest",
				"tests\\Unit\\app\\Services\\Keyword\\Career\\CareerListingServiceTest.php"
			],
			[
				"keyword/careerlis",
				"app\\Services\\Keyword\\Career\\CareerListingService.php"
			],
			[
				"api",
				"app\\Http\\Middleware\\Api.php"
			],
			[
				"appPr",
				"app\\Providers\\AppServiceProvider.php"
			],
			[
				"Obj.",
				"app\\Database\\Models\\Obj.php"
			],
			[
				"model",
				"app\\Database\\Model.php"
			],
			[
				"app",
				"app\\Providers\\AppServiceProvider.php"
			],
			[
				"Api.",
				"app\\Http\\Middleware\\Api.php"
			],
			[
				"ser",
				"app\\Service.php"
			],
			[
				"ava",
				"app\\Validation\\Validator.php"
			],
			[
				"AuthSignInService",
				"app\\Services\\Auth\\AuthSignInService.php"
			],
			[
				"Api\\AuthSignInController",
				"app\\Http\\Controllers\\Api\\AuthSignInController.php"
			],
			[
				"userselfkwdpvtl",
				"app\\Services\\UserSelfKwdPvt\\UserSelfKwdPvtListingService.php"
			],
			[
				"servic",
				"app\\Service.php"
			],
			[
				"listings",
				"app\\Services\\ListingService.php"
			],
			[
				"find",
				"app\\Services\\FindingService.php"
			],
			[
				"UserSelfKwdPvt.",
				"app\\Database\\Models\\UserSelfKwdPvt.php"
			],
			[
				"UserSelfKwdPvtListingService",
				"app\\Services\\UserSelfKwdPvt\\UserSelfKwdPvtListingService.php"
			],
			[
				"selfkeyword",
				"app\\Http\\Controllers\\Api\\SelfKeywordController.php"
			],
			[
				"validator",
				"app\\Validation\\Validator.php"
			],
			[
				".env",
				".env"
			],
			[
				"useridself",
				"tests\\Functional\\Api\\Users\\IdSelfKeywordsGetTest.php"
			],
			[
				"signincon",
				"app\\Http\\Controllers\\Api\\AuthSignInController.php"
			],
			[
				"usertables",
				"database\\seeds\\UserTableSeeder.php"
			],
			[
				"userfa",
				"database\\factories\\Models\\UserFactory.php"
			],
			[
				".",
				".env"
			],
			[
				"activitiespost",
				"tests\\Functional\\Api\\Cards\\IdActivitiesPostTest.php"
			],
			[
				"cards/",
				"tests\\Functional\\Api\\Cards\\GetTest.php"
			],
			[
				"cardactivity",
				"app\\Http\\Controllers\\Api\\CardActivityController.php"
			],
			[
				"signupp",
				"tests\\Functional\\Api\\Auth\\SignUpPostTest.php"
			],
			[
				"modelfa",
				"database\\factories\\Models\\ModelFactory.php"
			],
			[
				"func_",
				"tests\\Functional\\_TestCase.php"
			],
			[
				"userpro",
				"app\\Http\\Controllers\\Api\\UserProfilePhotoController.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "clien",
		"selected_items":
		[
			[
				"clien",
				"G:\\xampp\\htdocs\\client\\client.sublime-project"
			],
			[
				"server",
				"G:\\xampp\\htdocs\\server\\laravel.sublime-project"
			],
			[
				"",
				"C:\\xampp\\htdocs\\server\\.sublime-project.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"request",
				"Request"
			],
			[
				"abstract",
				"AbstractAdapter"
			],
			[
				"ke",
				"KernelEvent"
			]
		],
		"width": 1074.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 663.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
